{"version":3,"sources":["utils-test.js"],"names":["test","require","utils","t","tags","extractTags","deepEqual"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQD,QAAQ,cAAR,CAAd;;AAEAD,KAAK,8BAAL,EAAqCG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACxC,MAAIC,OAAOF,MAAMG,WAAN,CAAkB,6DAAlB,CAAX;AACAF,IAAEG,SAAF,uBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,CAChB,UADgB,EAEhB,SAFgB,EAGhB,SAHgB,EAIhB,KAJgB,EAKhB,KALgB,EAMhB,KANgB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAA,SAAOF,MAAMG,WAAN,CAAkB,wBAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,EAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,CAAkB,IAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAnBD","file":"utils-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\n// test('this test should pass', t => {\n//   t.pass()\n// })\n\n// test('this test should pass', t => {\n//   t.fail()\n// })\n\n// test('it should support async/await', async t => {\n//   let p = Promise.resolve(42)\n//   let secret = await p\n//   t.is(secret, 42)\n// })\nconst utils = require('../lib/utils')\n\ntest('extracting hastags from text', t => {\n  let tags = utils.extractTags('a #pictures with tags #AwEsOmE #Newgram #AVA and #100 ##yes')\n  t.deepEqual(tags, [\n    'pictures',\n    'awesome',\n    'newgram',\n    'ava',\n    '100',\n    'yes'\n  ])\n\n  tags = utils.extractTags('a picture with no tags')\n  t.deepEqual(tags, [])\n\n  tags = utils.extractTags()\n  t.deepEqual(tags, [])\n\n  tags = utils.extractTags(null)\n  t.deepEqual(tags, [])\n})\n"]}