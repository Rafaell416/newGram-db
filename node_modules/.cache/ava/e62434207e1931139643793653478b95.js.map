{"version":3,"sources":["utils-test.js"],"names":["test","require","utils","t","tags","extractTags","deepEqual","password","encrypted","result","encrypt","is"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;;AAEA,MAAMC,QAAQD,QAAQ,cAAR,CAAd;;AAEAD,KAAK,8BAAL,EAAqCG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACxC,MAAIC,OAAOF,MAAMG,WAAN,CAAkB,4DAAlB,CAAX;AACAF,IAAEG,SAAF,uBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,KAAlC,EAAyC,KAAzC,EAAgD,KAAhD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,CAAkB,wBAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,EAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,CAAkB,IAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAZD;;AAcAJ,KAAK,kBAAL,EAAyBG,KAAK;AAAA;AAAA;;AAC5B,MAAII,WAAW,QAAf;AACA,MAAIC,YAAY,kEAAhB;;AAEA,MAAIC,SAASP,MAAMQ,OAAN,CAAcH,QAAd,CAAb;AACAJ,IAAEQ,EAAF,yBAAKF,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAaD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAND","file":"utils-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\n\nconst utils = require('../lib/utils')\n\ntest('extracting hastags from text', t => {\n  let tags = utils.extractTags('a #picture with tags #AwEsOmE #Newgram #AVA and #100 ##yes')\n  t.deepEqual(tags, ['picture', 'awesome', 'newgram', 'ava', '100', 'yes'])\n\n  tags = utils.extractTags('a picture with no tags')\n  t.deepEqual(tags, [])\n\n  tags = utils.extractTags()\n  t.deepEqual(tags, [])\n\n  tags = utils.extractTags(null)\n  t.deepEqual(tags, [])\n})\n\ntest('encrypt password', t => {\n  let password = 'sha256'\n  let encrypted = '5d5b09f6dcb2d53a5fffc60c4ac0d55fabdf556069d6631545f42aa6e3500f2e'\n\n  let result = utils.encrypt(password)\n  t.is(result, encrypted)\n})\n"]}